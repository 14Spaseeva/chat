package org.study.stasy.ClientGUI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.study.stasy.ChatMessage;
import org.study.stasy.Exeptions.ClientException;
import org.study.stasy.app.Client;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;

/**
 * Created by ASPA on 01.05.2017.
 */
public class SendMsgForm extends JFrame {
    private String host = "localhost";
    private String port = "6658";
    private JPanel rootPanel;
    private Client user;
    private JButton button1;
    private JTextArea textArea1; //многострочное текстовое поле
    private JTextPane textPane1;  //текстовый редактор со стилям

    private static final String EXIT_MSG = "@exit";

    private SendMsgForm() throws ClientException {
        setContentPane(rootPanel);
        this.setSize(600, 300);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        textPane1.setEditable(false);
        button1.addActionListener(new ButtonActionSendMsg());
        user = new Client(host, port);
        textPane1.setText(user.getUserName());

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                user.sendMsg(EXIT_MSG);
                System.exit(0);
            }
        }); //закрытие окна

        setVisible(true);
    }

    public void out(String s) {
        textPane1.setText(s);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.setPreferredSize(new Dimension(500, 500));
        button1 = new JButton();
        button1.setText("Button");
        rootPanel.add(button1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textArea1 = new JTextArea();
        textArea1.setBackground(new Color(-2958115));
        rootPanel.add(textArea1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        textPane1 = new JTextPane();
        rootPanel.add(textPane1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }


    class ButtonActionSendMsg implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                sendMsg();
                recieveConfirm();
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }

        void sendMsg() {
            String text = textArea1.getText();
            user.sendMsg(text);
            textPane1.setText(String.format("%s\n>>>\t%s", textPane1.getText(), text));
            textArea1.setText("");
        }

        void recieveConfirm() throws IOException {
            ChatMessage chatMessage = user.recieveMsg();
            textPane1.setText(String.format("%s\t\t%s", textPane1.getText(), chatMessage.getMessage()));
        }
    }

    public static void main(String[] args) {
        try {
            new SendMsgForm();
        } catch (ClientException e) {
            e.printStackTrace();
        }
    }

}
